generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}


model Product {
  id                String   @id @default(uuid())
  productId         String   @unique
  title             String
  bodyHtml          String?
  createdAt         DateTime
  handle            String
  productType       String
  publishedAt       DateTime
  publishedScope    String
  status            String
  tags              String
  templateSuffix    String?
  updatedAt         DateTime
  vendor            String
  adminGraphqlApiId String
  imageUrl          String?
  shopName          String?
}


model Images {
  id                String   @id @default(uuid())
  productId         String   
  imageId           String   @unique
  createdAt         DateTime
  height            String
  position          String
  src               String
  updatedAt         DateTime
  variantIds        String?
  width             String
  alt               String
  adminGraphqlApiId String
}


model Options {
  id        String   @id @default(uuid())
  productId String
  optionId  String   @unique
  name      String
  position  String
  values    String
}


model Variants {
  id                   String   @id @default(uuid())
  productId            String
  variantsId           String   @unique
  barcode              String?
  compareAtPrice       String?
  createdAt            DateTime
  fulfillmentService   String
  grams                String
  imageId              String?
  inventoryItemId      String
  inventoryManagement  String?
  inventoryPolicy      String
  inventoryQuantity    String  
  oldInventoryQuantity String   
  position             String
  price                String
  requiresShipping     Boolean
  sku                  String?
  taxable              Boolean
  title                String
  updatedAt            DateTime
  weight               String
  weight_unit          String
  option1              String
  option2              String?
  option3              String?
  adminGraphqlApiId    String
}


model Collect {
  id            String   @id @default(uuid())
  collectId     String   @unique
  collectionId  String
  productId     String
  createdAt     DateTime
  position      String
  sortValue     String
  updatedAt     DateTime
}


model Collections {
  id                String   @id @default(uuid())
  collectionId      String   @unique
  title             String
  bodyHtml          String
  handle            String
  image             String?
  published         String?
  publishedAt       DateTime
  publishedScope    String
  sortOrder         String
  templateSuffix    String?
  updatedAt         DateTime
  adminGraphqlApiId String
}


model ProductFeed {
  id                    String   @id @default(uuid())
  feedName              String   @unique
  productFeedURL        String?
  shopName              String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}